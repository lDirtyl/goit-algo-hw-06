import networkx as nx
import matplotlib.pyplot as plt

# Створення графа для моделювання транспортної мережі невеликого міста
G = nx.Graph()

# Додавання вершин (зупинок) та ребер (шляхів між зупинками)
stops = ["Центральна Станція", "Проспект Парку", "Музей Історії", "Міська Ратуша", "Університет",
         "Бібліотека", "Спортивний Комплекс", "Набережна", "Площа на Східному Боці", "Старе Місто"]
G.add_nodes_from(stops)

routes = [("Центральна Станція", "Проспект Парку"), ("Центральна Станція", "Музей Історії"),
        ("Центральна Станція", "Міська Ратуша"), ("Проспект Парку", "Університет"),
        ("Музей Історії", "Університет"), ("Міська Ратуша", "Бібліотека"),
        ("Університет", "Бібліотека"), ("Університет", "Спортивний Комплекс"),
        ("Бібліотека", "Спортивний Комплекс"), ("Бібліотека", "Набережна"),
        ("Спортивний Комплекс", "Набережна"), ("Набережна", "Площа на Східному Боці"),
        ("Площа на Східному Боці", "Старе Місто"), ("Старе Місто", "Музей Історії")]
                           
G.add_edges_from(routes)

# Візуалізація графа
plt.figure(figsize=(10, 8))
pos = nx.spring_layout(G, seed=42)  # Генерація позицій для вершин для красивої візуалізації
nx.draw(G, pos, with_labels=True, node_color='skyblue', node_size=2000, edge_color='k', linewidths=1, font_size=12)
plt.title("Транспортна мережа малого міста")
plt.show()

# Знаходження шляху BFS
bfs_path = nx.shortest_path(G, source="Центральна Станція", target="Східна Площа")

# Створення дерева пошуку в глибину (DFS tree)
dfs_tree = nx.dfs_tree(G, source="Центральна Станція")
# Знаходження шляху в дереві DFS
dfs_path_in_tree = nx.shortest_path(dfs_tree, source="Центральна Станція", target="Східна Площа")

dfs_path_in_tree, bfs_path